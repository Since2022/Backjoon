# No. 14698
# 전생했더니 슬라임 연구자였던 건에 대하여 (Hard)
# https://www.acmicpc.net/problem/14698

# -문제
# 나는 슬라임을 합성했을 때 슬라임 에너지가 어떻게 변화하는지에 대해 연구하고 있어.
# 이곳의 슬라임은 모두 슬라임 에너지라는 것을 갖고 있고 그 양은 2 이상의 자연수로 표현돼.
#
# 슬라임 합성 과정은 2마리를 합성해서 1마리를 만들어내는 식으로 이루어져.
# A만큼의 슬라임 에너지를 가진 슬라임과 B만큼의 슬라임 에너지를 갖고 있는 슬라임이 있었다고 해보자.
# 이 슬라임 2마리를 합성하면 슬라임 에너지가 A × B 인 슬라임을 만들 수 있어.
#
# 그리고 슬라임 합성 기술이 아직 완벽하지 않아서 슬라임을 합성할 때마다 크나큰 전기 에너지가 필요해.
# 구체적으로, A만큼의 슬라임 에너지를 가진 슬라임과 B만큼의 슬라임 에너지를 가진 슬라임을 합성하려면
# A × B 만큼의 전기 에너지가 필요해.
#
# 나에겐 지금 N마리의 슬라임이 있어.
# 이 슬라임들을 모두 적절히 합성해서 1마리의 슬라임으로 만들려고 해.
# 그런데 각 합성 단계마다 필요한 전기 에너지들을 모두 곱한 값을 나에게 비용으로 청구하겠다고 했지 뭐야.
# 그래서 이 값이 최소가 되도록 합성을 적절히 수행하는 것이 내 연구의 목표야.
#
# 내 연구를 도와줘! 부탁이야!!

# -입력
# 첫 번째 줄에 테스트 케이스의 수 T 가 주어지고, 이어서 T 개의 테스트 케이스가 주어진다.
#
# 각 테스트 케이스의 첫 번째 줄에는 슬라임의 수 N (1 ≤ N ≤ 60)이 주어지고, 두 번째 줄에는 N 개의 자연수가 주어진다.
# i번째 자연수 C_i (2 ≤ Ci ≤ 2 × 1018) 는 i번째 슬라임의 슬라임 에너지를 나타낸다.
# 끝까지 합성하고 난 후에 생기는 슬라임의 에너지의 양이 2 × 1018 이하라는 것이 보장된다.
#
# 모든 테스트 케이스에 대한 N 의 총합이 1, 000, 000을 넘지 않음이 보장된다.

# -출력
# 각 테스트 케이스마다 슬라임을 끝까지 합성했을 때 청구될 비용의 최솟값을 1, 000, 000, 007로 나눈 나머지를 출력한다.
# 전기 에너지가 전혀 필요하지 않은 경우엔 1 을 출력한다.

# example input
#
# 2
# 5
# 3 10 2 8 14
# 1
# 13

# -Solution
# 값을 heap queue에 넣고, 작은 값 2개를 뽑는다.
# 뽑은 값들을 곱하고, 다시 queue에 넣는다.
# 이 과정을 값이 1개가 나올 때까지 반복한다.

import heapq
import sys
input = sys.stdin.readline

t = int(input())
ans = []

for _ in range(t):
    pay = 1
    n = int(input())
    c = list(map(int, input().split()))
    heapq.heapify(c)

    while len(c) >= 2:
        energe = heapq.heappop(c) * heapq.heappop(c)
        pay *= energe
        heapq.heappush(c, energe)

    ans.append(pay % 1000000007)

for i in ans:
    print(i)



















